# Generated from PPCDSALVC.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


import pprint
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\60")
        buf.write("\u017b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6")
        buf.write("\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3")
        buf.write("\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r")
        buf.write("\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3")
        buf.write("\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23")
        buf.write("\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\5\33\u00e8\n\33\3\34\3")
        buf.write("\34\7\34\u00ec\n\34\f\34\16\34\u00ef\13\34\3\34\5\34\u00f2")
        buf.write("\n\34\3\35\7\35\u00f5\n\35\f\35\16\35\u00f8\13\35\3\35")
        buf.write("\3\35\6\35\u00fc\n\35\r\35\16\35\u00fd\3\36\3\36\3\36")
        buf.write("\5\36\u0103\n\36\3\36\3\36\3\37\3\37\3\37\5\37\u010a\n")
        buf.write("\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3")
        buf.write(" \3 \3 \3 \3 \3 \5 \u0122\n \3!\3!\3!\3!\3!\3!\3!\3!\3")
        buf.write("!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\5!\u013a\n!\3")
        buf.write("\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"")
        buf.write("\3\"\3\"\3\"\3\"\5\"\u014e\n\"\3#\3#\3$\3$\3%\3%\3&\3")
        buf.write("&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3")
        buf.write("/\3/\3\60\3\60\3\61\3\61\3\62\3\62\7\62\u0170\n\62\f\62")
        buf.write("\16\62\u0173\13\62\3\63\6\63\u0176\n\63\r\63\16\63\u0177")
        buf.write("\3\63\3\63\2\2\64\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23")
        buf.write("\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25")
        buf.write(")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37=\2?\2")
        buf.write("A\2C\2E G!I\"K#M$O%Q&S\'U(W)Y*[+],_-a.c/e\60\3\2\n\3\2")
        buf.write("\63;\3\2\62;\3\2\62\62\b\2\f\f\17\17))^^\u0087\u0087\u202a")
        buf.write("\u202b\5\2\62;CHch\4\2C\\c|\5\2\62;C\\c|\5\2\13\f\17\17")
        buf.write("\"\"\2\u018f\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3")
        buf.write("\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2")
        buf.write("\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2")
        buf.write("\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2")
        buf.write("#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2E\3\2\2\2")
        buf.write("\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2")
        buf.write("\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2")
        buf.write("\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3")
        buf.write("\2\2\2\2e\3\2\2\2\3g\3\2\2\2\5o\3\2\2\2\7t\3\2\2\2\ty")
        buf.write("\3\2\2\2\13\u0080\3\2\2\2\r\u0085\3\2\2\2\17\u0089\3\2")
        buf.write("\2\2\21\u008f\3\2\2\2\23\u0096\3\2\2\2\25\u009e\3\2\2")
        buf.write("\2\27\u00a4\3\2\2\2\31\u00a8\3\2\2\2\33\u00ae\3\2\2\2")
        buf.write("\35\u00b4\3\2\2\2\37\u00b6\3\2\2\2!\u00b8\3\2\2\2#\u00bb")
        buf.write("\3\2\2\2%\u00be\3\2\2\2\'\u00c1\3\2\2\2)\u00c4\3\2\2\2")
        buf.write("+\u00c7\3\2\2\2-\u00ca\3\2\2\2/\u00cd\3\2\2\2\61\u00d4")
        buf.write("\3\2\2\2\63\u00d9\3\2\2\2\65\u00e7\3\2\2\2\67\u00f1\3")
        buf.write("\2\2\29\u00f6\3\2\2\2;\u00ff\3\2\2\2=\u0109\3\2\2\2?\u0121")
        buf.write("\3\2\2\2A\u0139\3\2\2\2C\u014d\3\2\2\2E\u014f\3\2\2\2")
        buf.write("G\u0151\3\2\2\2I\u0153\3\2\2\2K\u0155\3\2\2\2M\u0157\3")
        buf.write("\2\2\2O\u0159\3\2\2\2Q\u015b\3\2\2\2S\u015d\3\2\2\2U\u015f")
        buf.write("\3\2\2\2W\u0161\3\2\2\2Y\u0163\3\2\2\2[\u0165\3\2\2\2")
        buf.write("]\u0167\3\2\2\2_\u0169\3\2\2\2a\u016b\3\2\2\2c\u016d\3")
        buf.write("\2\2\2e\u0175\3\2\2\2gh\7r\2\2hi\7t\2\2ij\7q\2\2jk\7i")
        buf.write("\2\2kl\7t\2\2lm\7c\2\2mn\7o\2\2n\4\3\2\2\2op\7o\2\2pq")
        buf.write("\7c\2\2qr\7k\2\2rs\7p\2\2s\6\3\2\2\2tu\7h\2\2uv\7w\2\2")
        buf.write("vw\7p\2\2wx\7e\2\2x\b\3\2\2\2yz\7t\2\2z{\7g\2\2{|\7v\2")
        buf.write("\2|}\7w\2\2}~\7t\2\2~\177\7p\2\2\177\n\3\2\2\2\u0080\u0081")
        buf.write("\7x\2\2\u0081\u0082\7q\2\2\u0082\u0083\7k\2\2\u0083\u0084")
        buf.write("\7f\2\2\u0084\f\3\2\2\2\u0085\u0086\7x\2\2\u0086\u0087")
        buf.write("\7c\2\2\u0087\u0088\7t\2\2\u0088\16\3\2\2\2\u0089\u008a")
        buf.write("\7e\2\2\u008a\u008b\7n\2\2\u008b\u008c\7c\2\2\u008c\u008d")
        buf.write("\7u\2\2\u008d\u008e\7u\2\2\u008e\20\3\2\2\2\u008f\u0090")
        buf.write("\7r\2\2\u0090\u0091\7w\2\2\u0091\u0092\7d\2\2\u0092\u0093")
        buf.write("\7n\2\2\u0093\u0094\7k\2\2\u0094\u0095\7e\2\2\u0095\22")
        buf.write("\3\2\2\2\u0096\u0097\7r\2\2\u0097\u0098\7t\2\2\u0098\u0099")
        buf.write("\7k\2\2\u0099\u009a\7x\2\2\u009a\u009b\7c\2\2\u009b\u009c")
        buf.write("\7v\2\2\u009c\u009d\7g\2\2\u009d\24\3\2\2\2\u009e\u009f")
        buf.write("\7y\2\2\u009f\u00a0\7j\2\2\u00a0\u00a1\7k\2\2\u00a1\u00a2")
        buf.write("\7n\2\2\u00a2\u00a3\7g\2\2\u00a3\26\3\2\2\2\u00a4\u00a5")
        buf.write("\7h\2\2\u00a5\u00a6\7q\2\2\u00a6\u00a7\7t\2\2\u00a7\30")
        buf.write("\3\2\2\2\u00a8\u00a9\7r\2\2\u00a9\u00aa\7t\2\2\u00aa\u00ab")
        buf.write("\7k\2\2\u00ab\u00ac\7p\2\2\u00ac\u00ad\7v\2\2\u00ad\32")
        buf.write("\3\2\2\2\u00ae\u00af\7k\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1")
        buf.write("\7r\2\2\u00b1\u00b2\7w\2\2\u00b2\u00b3\7v\2\2\u00b3\34")
        buf.write("\3\2\2\2\u00b4\u00b5\7>\2\2\u00b5\36\3\2\2\2\u00b6\u00b7")
        buf.write("\7@\2\2\u00b7 \3\2\2\2\u00b8\u00b9\7#\2\2\u00b9\u00ba")
        buf.write("\7?\2\2\u00ba\"\3\2\2\2\u00bb\u00bc\7>\2\2\u00bc\u00bd")
        buf.write("\7?\2\2\u00bd$\3\2\2\2\u00be\u00bf\7@\2\2\u00bf\u00c0")
        buf.write("\7?\2\2\u00c0&\3\2\2\2\u00c1\u00c2\7?\2\2\u00c2\u00c3")
        buf.write("\7?\2\2\u00c3(\3\2\2\2\u00c4\u00c5\7(\2\2\u00c5\u00c6")
        buf.write("\7(\2\2\u00c6*\3\2\2\2\u00c7\u00c8\7~\2\2\u00c8\u00c9")
        buf.write("\7~\2\2\u00c9,\3\2\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc")
        buf.write("\7h\2\2\u00cc.\3\2\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf")
        buf.write("\7n\2\2\u00cf\u00d0\7u\2\2\u00d0\u00d1\7g\2\2\u00d1\u00d2")
        buf.write("\7k\2\2\u00d2\u00d3\7h\2\2\u00d3\60\3\2\2\2\u00d4\u00d5")
        buf.write("\7g\2\2\u00d5\u00d6\7n\2\2\u00d6\u00d7\7u\2\2\u00d7\u00d8")
        buf.write("\7g\2\2\u00d8\62\3\2\2\2\u00d9\u00da\7#\2\2\u00da\64\3")
        buf.write("\2\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7p\2\2\u00dd\u00e8")
        buf.write("\7v\2\2\u00de\u00df\7h\2\2\u00df\u00e0\7n\2\2\u00e0\u00e1")
        buf.write("\7q\2\2\u00e1\u00e2\7c\2\2\u00e2\u00e8\7v\2\2\u00e3\u00e4")
        buf.write("\7e\2\2\u00e4\u00e5\7j\2\2\u00e5\u00e6\7c\2\2\u00e6\u00e8")
        buf.write("\7t\2\2\u00e7\u00db\3\2\2\2\u00e7\u00de\3\2\2\2\u00e7")
        buf.write("\u00e3\3\2\2\2\u00e8\66\3\2\2\2\u00e9\u00ed\t\2\2\2\u00ea")
        buf.write("\u00ec\t\3\2\2\u00eb\u00ea\3\2\2\2\u00ec\u00ef\3\2\2\2")
        buf.write("\u00ed\u00eb\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u00f2\3")
        buf.write("\2\2\2\u00ef\u00ed\3\2\2\2\u00f0\u00f2\t\4\2\2\u00f1\u00e9")
        buf.write("\3\2\2\2\u00f1\u00f0\3\2\2\2\u00f28\3\2\2\2\u00f3\u00f5")
        buf.write("\t\3\2\2\u00f4\u00f3\3\2\2\2\u00f5\u00f8\3\2\2\2\u00f6")
        buf.write("\u00f4\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7\u00f9\3\2\2\2")
        buf.write("\u00f8\u00f6\3\2\2\2\u00f9\u00fb\7\60\2\2\u00fa\u00fc")
        buf.write("\t\3\2\2\u00fb\u00fa\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd")
        buf.write("\u00fb\3\2\2\2\u00fd\u00fe\3\2\2\2\u00fe:\3\2\2\2\u00ff")
        buf.write("\u0102\7)\2\2\u0100\u0103\n\5\2\2\u0101\u0103\5=\37\2")
        buf.write("\u0102\u0100\3\2\2\2\u0102\u0101\3\2\2\2\u0103\u0104\3")
        buf.write("\2\2\2\u0104\u0105\7)\2\2\u0105<\3\2\2\2\u0106\u010a\5")
        buf.write("? \2\u0107\u010a\5A!\2\u0108\u010a\5C\"\2\u0109\u0106")
        buf.write("\3\2\2\2\u0109\u0107\3\2\2\2\u0109\u0108\3\2\2\2\u010a")
        buf.write(">\3\2\2\2\u010b\u010c\7^\2\2\u010c\u0122\7)\2\2\u010d")
        buf.write("\u010e\7^\2\2\u010e\u0122\7$\2\2\u010f\u0110\7^\2\2\u0110")
        buf.write("\u0122\7^\2\2\u0111\u0112\7^\2\2\u0112\u0122\7\62\2\2")
        buf.write("\u0113\u0114\7^\2\2\u0114\u0122\7c\2\2\u0115\u0116\7^")
        buf.write("\2\2\u0116\u0122\7d\2\2\u0117\u0118\7^\2\2\u0118\u0122")
        buf.write("\7h\2\2\u0119\u011a\7^\2\2\u011a\u0122\7p\2\2\u011b\u011c")
        buf.write("\7^\2\2\u011c\u0122\7t\2\2\u011d\u011e\7^\2\2\u011e\u0122")
        buf.write("\7v\2\2\u011f\u0120\7^\2\2\u0120\u0122\7x\2\2\u0121\u010b")
        buf.write("\3\2\2\2\u0121\u010d\3\2\2\2\u0121\u010f\3\2\2\2\u0121")
        buf.write("\u0111\3\2\2\2\u0121\u0113\3\2\2\2\u0121\u0115\3\2\2\2")
        buf.write("\u0121\u0117\3\2\2\2\u0121\u0119\3\2\2\2\u0121\u011b\3")
        buf.write("\2\2\2\u0121\u011d\3\2\2\2\u0121\u011f\3\2\2\2\u0122@")
        buf.write("\3\2\2\2\u0123\u0124\7^\2\2\u0124\u0125\7z\2\2\u0125\u0126")
        buf.write("\3\2\2\2\u0126\u013a\t\6\2\2\u0127\u0128\7^\2\2\u0128")
        buf.write("\u0129\7z\2\2\u0129\u012a\3\2\2\2\u012a\u012b\t\6\2\2")
        buf.write("\u012b\u013a\t\6\2\2\u012c\u012d\7^\2\2\u012d\u012e\7")
        buf.write("z\2\2\u012e\u012f\3\2\2\2\u012f\u0130\t\6\2\2\u0130\u0131")
        buf.write("\t\6\2\2\u0131\u013a\t\6\2\2\u0132\u0133\7^\2\2\u0133")
        buf.write("\u0134\7z\2\2\u0134\u0135\3\2\2\2\u0135\u0136\t\6\2\2")
        buf.write("\u0136\u0137\t\6\2\2\u0137\u0138\t\6\2\2\u0138\u013a\t")
        buf.write("\6\2\2\u0139\u0123\3\2\2\2\u0139\u0127\3\2\2\2\u0139\u012c")
        buf.write("\3\2\2\2\u0139\u0132\3\2\2\2\u013aB\3\2\2\2\u013b\u013c")
        buf.write("\7^\2\2\u013c\u013d\7w\2\2\u013d\u013e\3\2\2\2\u013e\u013f")
        buf.write("\t\6\2\2\u013f\u0140\t\6\2\2\u0140\u0141\t\6\2\2\u0141")
        buf.write("\u014e\t\6\2\2\u0142\u0143\7^\2\2\u0143\u0144\7W\2\2\u0144")
        buf.write("\u0145\3\2\2\2\u0145\u0146\t\6\2\2\u0146\u0147\t\6\2\2")
        buf.write("\u0147\u0148\t\6\2\2\u0148\u0149\t\6\2\2\u0149\u014a\t")
        buf.write("\6\2\2\u014a\u014b\t\6\2\2\u014b\u014c\t\6\2\2\u014c\u014e")
        buf.write("\t\6\2\2\u014d\u013b\3\2\2\2\u014d\u0142\3\2\2\2\u014e")
        buf.write("D\3\2\2\2\u014f\u0150\7-\2\2\u0150F\3\2\2\2\u0151\u0152")
        buf.write("\7/\2\2\u0152H\3\2\2\2\u0153\u0154\7,\2\2\u0154J\3\2\2")
        buf.write("\2\u0155\u0156\7\61\2\2\u0156L\3\2\2\2\u0157\u0158\7?")
        buf.write("\2\2\u0158N\3\2\2\2\u0159\u015a\7<\2\2\u015aP\3\2\2\2")
        buf.write("\u015b\u015c\7]\2\2\u015cR\3\2\2\2\u015d\u015e\7_\2\2")
        buf.write("\u015eT\3\2\2\2\u015f\u0160\7*\2\2\u0160V\3\2\2\2\u0161")
        buf.write("\u0162\7+\2\2\u0162X\3\2\2\2\u0163\u0164\7}\2\2\u0164")
        buf.write("Z\3\2\2\2\u0165\u0166\7\177\2\2\u0166\\\3\2\2\2\u0167")
        buf.write("\u0168\7\60\2\2\u0168^\3\2\2\2\u0169\u016a\7.\2\2\u016a")
        buf.write("`\3\2\2\2\u016b\u016c\7=\2\2\u016cb\3\2\2\2\u016d\u0171")
        buf.write("\t\7\2\2\u016e\u0170\t\b\2\2\u016f\u016e\3\2\2\2\u0170")
        buf.write("\u0173\3\2\2\2\u0171\u016f\3\2\2\2\u0171\u0172\3\2\2\2")
        buf.write("\u0172d\3\2\2\2\u0173\u0171\3\2\2\2\u0174\u0176\t\t\2")
        buf.write("\2\u0175\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0175")
        buf.write("\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u0179\3\2\2\2\u0179")
        buf.write("\u017a\b\63\2\2\u017af\3\2\2\2\17\2\u00e7\u00ed\u00f1")
        buf.write("\u00f6\u00fd\u0102\u0109\u0121\u0139\u014d\u0171\u0177")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class PPCDSALVCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    TYPES = 26
    INT = 27
    FLOAT = 28
    CHAR = 29
    MAS = 30
    MENOS = 31
    MULT = 32
    DIV = 33
    IGUAL = 34
    PP = 35
    LB = 36
    RB = 37
    PA = 38
    PC = 39
    LLA = 40
    LLC = 41
    PUNTO = 42
    COMA = 43
    PUNTOCOMA = 44
    ID = 45
    IGN = 46

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'program'", "'main'", "'func'", "'return'", "'void'", "'var'", 
            "'class'", "'public'", "'private'", "'while'", "'for'", "'print'", 
            "'input'", "'<'", "'>'", "'!='", "'<='", "'>='", "'=='", "'&&'", 
            "'||'", "'if'", "'elseif'", "'else'", "'!'", "'+'", "'-'", "'*'", 
            "'/'", "'='", "':'", "'['", "']'", "'('", "')'", "'{'", "'}'", 
            "'.'", "','", "';'" ]

    symbolicNames = [ "<INVALID>",
            "TYPES", "INT", "FLOAT", "CHAR", "MAS", "MENOS", "MULT", "DIV", 
            "IGUAL", "PP", "LB", "RB", "PA", "PC", "LLA", "LLC", "PUNTO", 
            "COMA", "PUNTOCOMA", "ID", "IGN" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "TYPES", 
                  "INT", "FLOAT", "CHAR", "CommonCharacter", "SimpleEscapeSequence", 
                  "HexEscapeSequence", "UnicodeEscapeSequence", "MAS", "MENOS", 
                  "MULT", "DIV", "IGUAL", "PP", "LB", "RB", "PA", "PC", 
                  "LLA", "LLC", "PUNTO", "COMA", "PUNTOCOMA", "ID", "IGN" ]

    grammarFileName = "PPCDSALVC.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


